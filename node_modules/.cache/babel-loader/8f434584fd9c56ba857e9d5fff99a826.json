{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\Desktop\\\\portfolio\\\\src\\\\components\\\\Project Domains\\\\Domains.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport \"./Domains.scss\";\nimport ModalView from \"../ModalView/ModalView\";\nimport { apps, game, graphics } from \"../data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\n\nconst Domains = ({\n  img,\n  alt,\n  title\n}) => {\n  _s();\n\n  const [modalIsOpen, setIsModalOpen] = useState(false);\n  const [selected, setSelected] = useState(\"apps\");\n  const [data, setData] = useState([]);\n  const projects = [{\n    id: \"apps\",\n    title: \"App Development\"\n  }, {\n    id: \"game\",\n    title: \"Game Development\"\n  }, {\n    id: \"designs\",\n    title: \"Graphic Designing\"\n  }, {\n    id: \"web\",\n    title: \"Web Development\"\n  }];\n\n  useEffect = () => {\n    switch (selected) {\n      case \"apps\":\n        setData(apps);\n        break;\n\n      case \"game\":\n        setData(game);\n        break;\n\n      case \"graphics\":\n        setData(graphics);\n        break;\n\n      default:\n        setData(apps);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"main-item\",\n    onClick: () => setIsModalOpen(true),\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      shouldCloseOnOverlayClick: true,\n      onRequestClose: () => setIsModalOpen(false),\n      style: {\n        overlay: {\n          backgroundColor: \"black\"\n        },\n        content: {\n          backgroundColor: \"#191e24\",\n          color: \"white\"\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"modal-view\",\n        children: data.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"modal-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: m.img,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: d.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      class: \"img\",\n      src: img,\n      alt: alt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Domains, \"7hzDj9GVoU4DcFNoYjCizfr4gRg=\");\n\n_c = Domains;\nexport default Domains;\n\nvar _c;\n\n$RefreshReg$(_c, \"Domains\");","map":{"version":3,"sources":["C:/Users/ankit/Desktop/portfolio/src/components/Project Domains/Domains.js"],"names":["React","useState","useEffect","Modal","ModalView","apps","game","graphics","setAppElement","Domains","img","alt","title","modalIsOpen","setIsModalOpen","selected","setSelected","data","setData","projects","id","overlay","backgroundColor","content","color","map","m","d"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,gBAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,QAArB,QAAqC,SAArC;;AAEAJ,KAAK,CAACK,aAAN,CAAoB,OAApB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,GAAP;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AAAA;;AACvC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,MAAD,CAAxC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMkB,QAAQ,GAAG,CACf;AACEC,IAAAA,EAAE,EAAE,MADN;AAEER,IAAAA,KAAK,EAAE;AAFT,GADe,EAKf;AACEQ,IAAAA,EAAE,EAAE,MADN;AAEER,IAAAA,KAAK,EAAE;AAFT,GALe,EASf;AACEQ,IAAAA,EAAE,EAAE,SADN;AAEER,IAAAA,KAAK,EAAE;AAFT,GATe,EAaf;AACEQ,IAAAA,EAAE,EAAE,KADN;AAEER,IAAAA,KAAK,EAAE;AAFT,GAbe,CAAjB;;AAmBAV,EAAAA,SAAS,GAAG,MAAM;AAChB,YAAQa,QAAR;AACE,WAAK,MAAL;AACEG,QAAAA,OAAO,CAACb,IAAD,CAAP;AACA;;AACF,WAAK,MAAL;AACEa,QAAAA,OAAO,CAACZ,IAAD,CAAP;AACA;;AACF,WAAK,UAAL;AACEY,QAAAA,OAAO,CAACX,QAAD,CAAP;AACA;;AACF;AACEW,QAAAA,OAAO,CAACb,IAAD,CAAP;AAXJ;AAaD,GAdD;;AAeA,sBACE;AAAK,IAAA,KAAK,EAAC,WAAX;AAAuB,IAAA,OAAO,EAAE,MAAMS,cAAc,CAAC,IAAD,CAApD;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,MAAM,EAAED,WADV;AAEE,MAAA,yBAAyB,EAAE,IAF7B;AAGE,MAAA,cAAc,EAAE,MAAMC,cAAc,CAAC,KAAD,CAHtC;AAIE,MAAA,KAAK,EAAE;AACLO,QAAAA,OAAO,EAAE;AACPC,UAAAA,eAAe,EAAE;AADV,SADJ;AAILC,QAAAA,OAAO,EAAE;AACPD,UAAAA,eAAe,EAAE,SADV;AAEPE,UAAAA,KAAK,EAAE;AAFA;AAJJ,OAJT;AAAA,6BAcE;AAAK,QAAA,KAAK,EAAC,YAAX;AAAA,kBACGP,IAAI,CAACQ,GAAL,CAAUC,CAAD,iBACR;AAAK,UAAA,KAAK,EAAC,YAAX;AAAA,kCACE;AAAK,YAAA,GAAG,EAAEA,CAAC,CAAChB,GAAZ;AAAiB,YAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKiB,CAAC,CAACf;AAAP;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA,YADF,eAwBE;AAAK,MAAA,KAAK,EAAC,KAAX;AAAiB,MAAA,GAAG,EAAEF,GAAtB;AAA2B,MAAA,GAAG,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,YAxBF,eAyBE;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAnED;;GAAMH,O;;KAAAA,O;AAqEN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport \"./Domains.scss\";\r\nimport ModalView from \"../ModalView/ModalView\";\r\nimport { apps, game, graphics } from \"../data\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst Domains = ({ img, alt, title }) => {\r\n  const [modalIsOpen, setIsModalOpen] = useState(false);\r\n  const [selected, setSelected] = useState(\"apps\");\r\n  const [data, setData] = useState([]);\r\n  const projects = [\r\n    {\r\n      id: \"apps\",\r\n      title: \"App Development\",\r\n    },\r\n    {\r\n      id: \"game\",\r\n      title: \"Game Development\",\r\n    },\r\n    {\r\n      id: \"designs\",\r\n      title: \"Graphic Designing\",\r\n    },\r\n    {\r\n      id: \"web\",\r\n      title: \"Web Development\",\r\n    },\r\n  ];\r\n\r\n  useEffect = () => {\r\n    switch (selected) {\r\n      case \"apps\":\r\n        setData(apps);\r\n        break;\r\n      case \"game\":\r\n        setData(game);\r\n        break;\r\n      case \"graphics\":\r\n        setData(graphics);\r\n        break;\r\n      default:\r\n        setData(apps);\r\n    }\r\n  };\r\n  return (\r\n    <div class=\"main-item\" onClick={() => setIsModalOpen(true)}>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        shouldCloseOnOverlayClick={true}\r\n        onRequestClose={() => setIsModalOpen(false)}\r\n        style={{\r\n          overlay: {\r\n            backgroundColor: \"black\",\r\n          },\r\n          content: {\r\n            backgroundColor: \"#191e24\",\r\n            color: \"white\",\r\n          },\r\n        }}\r\n      >\r\n        <div class=\"modal-view\">\r\n          {data.map((m) => (\r\n            <div class=\"modal-item\">\r\n              <img src={m.img} alt=\"\" />\r\n              <h3>{d.title}</h3>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Modal>\r\n      <img class=\"img\" src={img} alt={alt} />\r\n      <h1>{title}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Domains;\r\n"]},"metadata":{},"sourceType":"module"}