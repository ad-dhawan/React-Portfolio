{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { noop, off, on } from './misc/util';\n\nvar createProcess = function (options) {\n  return function (dataTransfer, event) {\n    var uri = dataTransfer.getData('text/uri-list');\n\n    if (uri) {\n      (options.onUri || noop)(uri, event);\n      return;\n    }\n\n    if (dataTransfer.files && dataTransfer.files.length) {\n      (options.onFiles || noop)(Array.from(dataTransfer.files), event);\n      return;\n    }\n\n    if (event.clipboardData) {\n      var text = event.clipboardData.getData('text');\n      (options.onText || noop)(text, event);\n      return;\n    }\n  };\n};\n\nvar useDrop = function (options, args) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (args === void 0) {\n    args = [];\n  }\n\n  var onFiles = options.onFiles,\n      onText = options.onText,\n      onUri = options.onUri;\n\n  var _a = useState(false),\n      over = _a[0],\n      setOverRaw = _a[1];\n\n  var setOver = useCallback(setOverRaw, []);\n  var process = useMemo(function () {\n    return createProcess(options);\n  }, [onFiles, onText, onUri]);\n  useEffect(function () {\n    var onDragOver = function (event) {\n      event.preventDefault();\n      setOver(true);\n    };\n\n    var onDragEnter = function (event) {\n      event.preventDefault();\n      setOver(true);\n    };\n\n    var onDragLeave = function () {\n      setOver(false);\n    };\n\n    var onDragExit = function () {\n      setOver(false);\n    };\n\n    var onDrop = function (event) {\n      event.preventDefault();\n      setOver(false);\n      process(event.dataTransfer, event);\n    };\n\n    var onPaste = function (event) {\n      process(event.clipboardData, event);\n    };\n\n    on(document, 'dragover', onDragOver);\n    on(document, 'dragenter', onDragEnter);\n    on(document, 'dragleave', onDragLeave);\n    on(document, 'dragexit', onDragExit);\n    on(document, 'drop', onDrop);\n\n    if (onText) {\n      on(document, 'paste', onPaste);\n    }\n\n    return function () {\n      off(document, 'dragover', onDragOver);\n      off(document, 'dragenter', onDragEnter);\n      off(document, 'dragleave', onDragLeave);\n      off(document, 'dragexit', onDragExit);\n      off(document, 'drop', onDrop);\n      off(document, 'paste', onPaste);\n    };\n  }, __spreadArrays([process], args));\n  return {\n    over: over\n  };\n};\n\nexport default useDrop;","map":{"version":3,"sources":["D:/React-Portfolio/node_modules/react-use/esm/useDrop.js"],"names":["__spreadArrays","useCallback","useEffect","useMemo","useState","noop","off","on","createProcess","options","dataTransfer","event","uri","getData","onUri","files","length","onFiles","Array","from","clipboardData","text","onText","useDrop","args","_a","over","setOverRaw","setOver","process","onDragOver","preventDefault","onDragEnter","onDragLeave","onDragExit","onDrop","onPaste","document"],"mappings":"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","sourcesContent":["import { __spreadArrays } from \"tslib\";\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { noop, off, on } from './misc/util';\nvar createProcess = function (options) { return function (dataTransfer, event) {\n    var uri = dataTransfer.getData('text/uri-list');\n    if (uri) {\n        (options.onUri || noop)(uri, event);\n        return;\n    }\n    if (dataTransfer.files && dataTransfer.files.length) {\n        (options.onFiles || noop)(Array.from(dataTransfer.files), event);\n        return;\n    }\n    if (event.clipboardData) {\n        var text = event.clipboardData.getData('text');\n        (options.onText || noop)(text, event);\n        return;\n    }\n}; };\nvar useDrop = function (options, args) {\n    if (options === void 0) { options = {}; }\n    if (args === void 0) { args = []; }\n    var onFiles = options.onFiles, onText = options.onText, onUri = options.onUri;\n    var _a = useState(false), over = _a[0], setOverRaw = _a[1];\n    var setOver = useCallback(setOverRaw, []);\n    var process = useMemo(function () { return createProcess(options); }, [onFiles, onText, onUri]);\n    useEffect(function () {\n        var onDragOver = function (event) {\n            event.preventDefault();\n            setOver(true);\n        };\n        var onDragEnter = function (event) {\n            event.preventDefault();\n            setOver(true);\n        };\n        var onDragLeave = function () {\n            setOver(false);\n        };\n        var onDragExit = function () {\n            setOver(false);\n        };\n        var onDrop = function (event) {\n            event.preventDefault();\n            setOver(false);\n            process(event.dataTransfer, event);\n        };\n        var onPaste = function (event) {\n            process(event.clipboardData, event);\n        };\n        on(document, 'dragover', onDragOver);\n        on(document, 'dragenter', onDragEnter);\n        on(document, 'dragleave', onDragLeave);\n        on(document, 'dragexit', onDragExit);\n        on(document, 'drop', onDrop);\n        if (onText) {\n            on(document, 'paste', onPaste);\n        }\n        return function () {\n            off(document, 'dragover', onDragOver);\n            off(document, 'dragenter', onDragEnter);\n            off(document, 'dragleave', onDragLeave);\n            off(document, 'dragexit', onDragExit);\n            off(document, 'drop', onDrop);\n            off(document, 'paste', onPaste);\n        };\n    }, __spreadArrays([process], args));\n    return { over: over };\n};\nexport default useDrop;\n"]},"metadata":{},"sourceType":"module"}