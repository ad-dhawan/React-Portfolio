{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Loader = void 0;\n\nconst Container_1 = require(\"./Container\");\n\nconst Utils_1 = require(\"../Utils\");\n\nconst tsParticlesDom = [];\n\nfunction fetchError(statusCode) {\n  console.error(`Error tsParticles - fetch status: ${statusCode}`);\n  console.error(\"Error tsParticles - File config not found\");\n}\n\nclass Loader {\n  static dom() {\n    return tsParticlesDom;\n  }\n\n  static domItem(index) {\n    const dom = Loader.dom();\n    const item = dom[index];\n\n    if (item && !item.destroyed) {\n      return item;\n    }\n\n    dom.splice(index, 1);\n  }\n\n  static load(tagId, options, index) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const domContainer = document.getElementById(tagId);\n\n      if (!domContainer) {\n        return;\n      }\n\n      return Loader.set(tagId, domContainer, options, index);\n    });\n  }\n\n  static set(id, domContainer, options, index) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const currentOptions = options instanceof Array ? Utils_1.Utils.itemFromArray(options, index) : options;\n      const dom = Loader.dom();\n      const oldIndex = dom.findIndex(v => v.id === id);\n\n      if (oldIndex >= 0) {\n        const old = Loader.domItem(oldIndex);\n\n        if (old && !old.destroyed) {\n          old.destroy();\n          dom.splice(oldIndex, 1);\n        }\n      }\n\n      let canvasEl;\n      let generatedCanvas;\n\n      if (domContainer.tagName.toLowerCase() === \"canvas\") {\n        canvasEl = domContainer;\n        generatedCanvas = false;\n      } else {\n        const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n\n        if (existingCanvases.length) {\n          canvasEl = existingCanvases[0];\n\n          if (!canvasEl.className) {\n            canvasEl.className = Utils_1.Constants.canvasClass;\n          }\n\n          generatedCanvas = false;\n        } else {\n          generatedCanvas = true;\n          canvasEl = document.createElement(\"canvas\");\n          canvasEl.className = Utils_1.Constants.canvasClass;\n          canvasEl.style.width = \"100%\";\n          canvasEl.style.height = \"100%\";\n          domContainer.appendChild(canvasEl);\n        }\n      }\n\n      const newItem = new Container_1.Container(id, currentOptions);\n\n      if (oldIndex >= 0) {\n        dom.splice(oldIndex, 0, newItem);\n      } else {\n        dom.push(newItem);\n      }\n\n      newItem.canvas.loadCanvas(canvasEl, generatedCanvas);\n      yield newItem.start();\n      return newItem;\n    });\n  }\n\n  static loadJSON(tagId, jsonUrl, index) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const url = jsonUrl instanceof Array ? Utils_1.Utils.itemFromArray(jsonUrl, index) : jsonUrl;\n      const response = yield fetch(url);\n\n      if (response.ok) {\n        return Loader.load(tagId, yield response.json());\n      } else {\n        fetchError(response.status);\n      }\n    });\n  }\n\n  static setJSON(id, domContainer, jsonUrl) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const response = yield fetch(jsonUrl);\n\n      if (response.ok) {\n        const options = yield response.json();\n        return Loader.set(id, domContainer, options);\n      } else {\n        fetchError(response.status);\n      }\n    });\n  }\n\n  static setOnClickHandler(callback) {\n    const dom = Loader.dom();\n\n    if (dom.length === 0) {\n      throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n    }\n\n    for (const domItem of dom) {\n      const el = domItem.interactivity.element;\n\n      if (!el) {\n        continue;\n      }\n\n      const clickOrTouchHandler = (e, pos) => {\n        if (domItem.destroyed) {\n          return;\n        }\n\n        const pxRatio = domItem.retina.pixelRatio;\n        const posRetina = {\n          x: pos.x * pxRatio,\n          y: pos.y * pxRatio\n        };\n        const particles = domItem.particles.quadTree.queryCircle(posRetina, domItem.retina.sizeValue);\n        callback(e, particles);\n      };\n\n      const clickHandler = e => {\n        if (domItem.destroyed) {\n          return;\n        }\n\n        const mouseEvent = e;\n        const pos = {\n          x: mouseEvent.offsetX || mouseEvent.clientX,\n          y: mouseEvent.offsetY || mouseEvent.clientY\n        };\n        clickOrTouchHandler(e, pos);\n      };\n\n      const touchStartHandler = () => {\n        if (domItem.destroyed) {\n          return;\n        }\n\n        touched = true;\n        touchMoved = false;\n      };\n\n      const touchMoveHandler = () => {\n        if (domItem.destroyed) {\n          return;\n        }\n\n        touchMoved = true;\n      };\n\n      const touchEndHandler = e => {\n        var _a, _b, _c;\n\n        if (domItem.destroyed) {\n          return;\n        }\n\n        if (touched && !touchMoved) {\n          const touchEvent = e;\n          const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n          const canvasRect = (_a = domItem.canvas.element) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();\n          const pos = {\n            x: lastTouch.clientX - ((_b = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _b !== void 0 ? _b : 0),\n            y: lastTouch.clientY - ((_c = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _c !== void 0 ? _c : 0)\n          };\n          clickOrTouchHandler(e, pos);\n        }\n\n        touched = false;\n        touchMoved = false;\n      };\n\n      const touchCancelHandler = () => {\n        if (domItem.destroyed) {\n          return;\n        }\n\n        touched = false;\n        touchMoved = false;\n      };\n\n      let touched = false;\n      let touchMoved = false;\n      el.addEventListener(\"click\", clickHandler);\n      el.addEventListener(\"touchstart\", touchStartHandler);\n      el.addEventListener(\"touchmove\", touchMoveHandler);\n      el.addEventListener(\"touchend\", touchEndHandler);\n      el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n  }\n\n}\n\nexports.Loader = Loader;","map":{"version":3,"sources":["D:/React-Portfolio/node_modules/tsparticles/dist/Core/Loader.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","Loader","Container_1","require","Utils_1","tsParticlesDom","fetchError","statusCode","console","error","dom","domItem","index","item","destroyed","splice","load","tagId","options","domContainer","document","getElementById","set","id","currentOptions","Array","Utils","itemFromArray","oldIndex","findIndex","v","old","destroy","canvasEl","generatedCanvas","tagName","toLowerCase","existingCanvases","getElementsByTagName","length","className","Constants","canvasClass","createElement","style","width","height","appendChild","newItem","Container","push","canvas","loadCanvas","start","loadJSON","jsonUrl","url","response","fetch","ok","json","status","setJSON","setOnClickHandler","callback","Error","el","interactivity","element","clickOrTouchHandler","pos","pxRatio","retina","pixelRatio","posRetina","x","y","particles","quadTree","queryCircle","sizeValue","clickHandler","mouseEvent","offsetX","clientX","offsetY","clientY","touchStartHandler","touched","touchMoved","touchMoveHandler","touchEndHandler","_a","_b","_c","touchEvent","lastTouch","touches","canvasRect","getBoundingClientRect","left","top","touchCancelHandler","addEventListener"],"mappings":"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","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Loader = void 0;\r\nconst Container_1 = require(\"./Container\");\r\nconst Utils_1 = require(\"../Utils\");\r\nconst tsParticlesDom = [];\r\nfunction fetchError(statusCode) {\r\n    console.error(`Error tsParticles - fetch status: ${statusCode}`);\r\n    console.error(\"Error tsParticles - File config not found\");\r\n}\r\nclass Loader {\r\n    static dom() {\r\n        return tsParticlesDom;\r\n    }\r\n    static domItem(index) {\r\n        const dom = Loader.dom();\r\n        const item = dom[index];\r\n        if (item && !item.destroyed) {\r\n            return item;\r\n        }\r\n        dom.splice(index, 1);\r\n    }\r\n    static load(tagId, options, index) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const domContainer = document.getElementById(tagId);\r\n            if (!domContainer) {\r\n                return;\r\n            }\r\n            return Loader.set(tagId, domContainer, options, index);\r\n        });\r\n    }\r\n    static set(id, domContainer, options, index) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const currentOptions = options instanceof Array ? Utils_1.Utils.itemFromArray(options, index) : options;\r\n            const dom = Loader.dom();\r\n            const oldIndex = dom.findIndex((v) => v.id === id);\r\n            if (oldIndex >= 0) {\r\n                const old = Loader.domItem(oldIndex);\r\n                if (old && !old.destroyed) {\r\n                    old.destroy();\r\n                    dom.splice(oldIndex, 1);\r\n                }\r\n            }\r\n            let canvasEl;\r\n            let generatedCanvas;\r\n            if (domContainer.tagName.toLowerCase() === \"canvas\") {\r\n                canvasEl = domContainer;\r\n                generatedCanvas = false;\r\n            }\r\n            else {\r\n                const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\r\n                if (existingCanvases.length) {\r\n                    canvasEl = existingCanvases[0];\r\n                    if (!canvasEl.className) {\r\n                        canvasEl.className = Utils_1.Constants.canvasClass;\r\n                    }\r\n                    generatedCanvas = false;\r\n                }\r\n                else {\r\n                    generatedCanvas = true;\r\n                    canvasEl = document.createElement(\"canvas\");\r\n                    canvasEl.className = Utils_1.Constants.canvasClass;\r\n                    canvasEl.style.width = \"100%\";\r\n                    canvasEl.style.height = \"100%\";\r\n                    domContainer.appendChild(canvasEl);\r\n                }\r\n            }\r\n            const newItem = new Container_1.Container(id, currentOptions);\r\n            if (oldIndex >= 0) {\r\n                dom.splice(oldIndex, 0, newItem);\r\n            }\r\n            else {\r\n                dom.push(newItem);\r\n            }\r\n            newItem.canvas.loadCanvas(canvasEl, generatedCanvas);\r\n            yield newItem.start();\r\n            return newItem;\r\n        });\r\n    }\r\n    static loadJSON(tagId, jsonUrl, index) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const url = jsonUrl instanceof Array ? Utils_1.Utils.itemFromArray(jsonUrl, index) : jsonUrl;\r\n            const response = yield fetch(url);\r\n            if (response.ok) {\r\n                return Loader.load(tagId, yield response.json());\r\n            }\r\n            else {\r\n                fetchError(response.status);\r\n            }\r\n        });\r\n    }\r\n    static setJSON(id, domContainer, jsonUrl) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const response = yield fetch(jsonUrl);\r\n            if (response.ok) {\r\n                const options = yield response.json();\r\n                return Loader.set(id, domContainer, options);\r\n            }\r\n            else {\r\n                fetchError(response.status);\r\n            }\r\n        });\r\n    }\r\n    static setOnClickHandler(callback) {\r\n        const dom = Loader.dom();\r\n        if (dom.length === 0) {\r\n            throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\r\n        }\r\n        for (const domItem of dom) {\r\n            const el = domItem.interactivity.element;\r\n            if (!el) {\r\n                continue;\r\n            }\r\n            const clickOrTouchHandler = (e, pos) => {\r\n                if (domItem.destroyed) {\r\n                    return;\r\n                }\r\n                const pxRatio = domItem.retina.pixelRatio;\r\n                const posRetina = {\r\n                    x: pos.x * pxRatio,\r\n                    y: pos.y * pxRatio,\r\n                };\r\n                const particles = domItem.particles.quadTree.queryCircle(posRetina, domItem.retina.sizeValue);\r\n                callback(e, particles);\r\n            };\r\n            const clickHandler = (e) => {\r\n                if (domItem.destroyed) {\r\n                    return;\r\n                }\r\n                const mouseEvent = e;\r\n                const pos = {\r\n                    x: mouseEvent.offsetX || mouseEvent.clientX,\r\n                    y: mouseEvent.offsetY || mouseEvent.clientY,\r\n                };\r\n                clickOrTouchHandler(e, pos);\r\n            };\r\n            const touchStartHandler = () => {\r\n                if (domItem.destroyed) {\r\n                    return;\r\n                }\r\n                touched = true;\r\n                touchMoved = false;\r\n            };\r\n            const touchMoveHandler = () => {\r\n                if (domItem.destroyed) {\r\n                    return;\r\n                }\r\n                touchMoved = true;\r\n            };\r\n            const touchEndHandler = (e) => {\r\n                var _a, _b, _c;\r\n                if (domItem.destroyed) {\r\n                    return;\r\n                }\r\n                if (touched && !touchMoved) {\r\n                    const touchEvent = e;\r\n                    const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\r\n                    const canvasRect = (_a = domItem.canvas.element) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();\r\n                    const pos = {\r\n                        x: lastTouch.clientX - ((_b = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _b !== void 0 ? _b : 0),\r\n                        y: lastTouch.clientY - ((_c = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _c !== void 0 ? _c : 0),\r\n                    };\r\n                    clickOrTouchHandler(e, pos);\r\n                }\r\n                touched = false;\r\n                touchMoved = false;\r\n            };\r\n            const touchCancelHandler = () => {\r\n                if (domItem.destroyed) {\r\n                    return;\r\n                }\r\n                touched = false;\r\n                touchMoved = false;\r\n            };\r\n            let touched = false;\r\n            let touchMoved = false;\r\n            el.addEventListener(\"click\", clickHandler);\r\n            el.addEventListener(\"touchstart\", touchStartHandler);\r\n            el.addEventListener(\"touchmove\", touchMoveHandler);\r\n            el.addEventListener(\"touchend\", touchEndHandler);\r\n            el.addEventListener(\"touchcancel\", touchCancelHandler);\r\n        }\r\n    }\r\n}\r\nexports.Loader = Loader;\r\n"]},"metadata":{},"sourceType":"script"}