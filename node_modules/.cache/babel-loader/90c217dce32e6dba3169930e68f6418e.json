{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { off, on } from './misc/util'; // kudos: https://usehooks.com/\n\nvar useHoverDirty = function (ref, enabled) {\n  if (enabled === void 0) {\n    enabled = true;\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    if (typeof ref !== 'object' || typeof ref.current === 'undefined') {\n      console.error('useHoverDirty expects a single ref argument.');\n    }\n  }\n\n  var _a = useState(false),\n      value = _a[0],\n      setValue = _a[1];\n\n  useEffect(function () {\n    var onMouseOver = function () {\n      return setValue(true);\n    };\n\n    var onMouseOut = function () {\n      return setValue(false);\n    };\n\n    if (enabled && ref && ref.current) {\n      on(ref.current, 'mouseover', onMouseOver);\n      on(ref.current, 'mouseout', onMouseOut);\n    } // fixes react-hooks/exhaustive-deps warning about stale ref elements\n\n\n    var current = ref.current;\n    return function () {\n      if (enabled && current) {\n        off(current, 'mouseover', onMouseOver);\n        off(current, 'mouseout', onMouseOut);\n      }\n    };\n  }, [enabled, ref]);\n  return value;\n};\n\nexport default useHoverDirty;","map":{"version":3,"sources":["/Users/ad/Documents/Developer/React-Portfolio/node_modules/react-use/esm/useHoverDirty.js"],"names":["useEffect","useState","off","on","useHoverDirty","ref","enabled","process","env","NODE_ENV","current","console","error","_a","value","setValue","onMouseOver","onMouseOut"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,EAAcC,EAAd,QAAwB,aAAxB,C,CACA;;AACA,IAAIC,aAAa,GAAG,UAAUC,GAAV,EAAeC,OAAf,EAAwB;AACxC,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAG,IAAV;AAAiB;;AAC3C,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxC,QAAI,OAAOJ,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAG,CAACK,OAAX,KAAuB,WAAtD,EAAmE;AAC/DC,MAAAA,OAAO,CAACC,KAAR,CAAc,8CAAd;AACH;AACJ;;AACD,MAAIC,EAAE,GAAGZ,QAAQ,CAAC,KAAD,CAAjB;AAAA,MAA0Ba,KAAK,GAAGD,EAAE,CAAC,CAAD,CAApC;AAAA,MAAyCE,QAAQ,GAAGF,EAAE,CAAC,CAAD,CAAtD;;AACAb,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIgB,WAAW,GAAG,YAAY;AAAE,aAAOD,QAAQ,CAAC,IAAD,CAAf;AAAwB,KAAxD;;AACA,QAAIE,UAAU,GAAG,YAAY;AAAE,aAAOF,QAAQ,CAAC,KAAD,CAAf;AAAyB,KAAxD;;AACA,QAAIT,OAAO,IAAID,GAAX,IAAkBA,GAAG,CAACK,OAA1B,EAAmC;AAC/BP,MAAAA,EAAE,CAACE,GAAG,CAACK,OAAL,EAAc,WAAd,EAA2BM,WAA3B,CAAF;AACAb,MAAAA,EAAE,CAACE,GAAG,CAACK,OAAL,EAAc,UAAd,EAA0BO,UAA1B,CAAF;AACH,KANiB,CAOlB;;;AACA,QAAIP,OAAO,GAAGL,GAAG,CAACK,OAAlB;AACA,WAAO,YAAY;AACf,UAAIJ,OAAO,IAAII,OAAf,EAAwB;AACpBR,QAAAA,GAAG,CAACQ,OAAD,EAAU,WAAV,EAAuBM,WAAvB,CAAH;AACAd,QAAAA,GAAG,CAACQ,OAAD,EAAU,UAAV,EAAsBO,UAAtB,CAAH;AACH;AACJ,KALD;AAMH,GAfQ,EAeN,CAACX,OAAD,EAAUD,GAAV,CAfM,CAAT;AAgBA,SAAOS,KAAP;AACH,CAzBD;;AA0BA,eAAeV,aAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { off, on } from './misc/util';\n// kudos: https://usehooks.com/\nvar useHoverDirty = function (ref, enabled) {\n    if (enabled === void 0) { enabled = true; }\n    if (process.env.NODE_ENV === 'development') {\n        if (typeof ref !== 'object' || typeof ref.current === 'undefined') {\n            console.error('useHoverDirty expects a single ref argument.');\n        }\n    }\n    var _a = useState(false), value = _a[0], setValue = _a[1];\n    useEffect(function () {\n        var onMouseOver = function () { return setValue(true); };\n        var onMouseOut = function () { return setValue(false); };\n        if (enabled && ref && ref.current) {\n            on(ref.current, 'mouseover', onMouseOver);\n            on(ref.current, 'mouseout', onMouseOut);\n        }\n        // fixes react-hooks/exhaustive-deps warning about stale ref elements\n        var current = ref.current;\n        return function () {\n            if (enabled && current) {\n                off(current, 'mouseover', onMouseOver);\n                off(current, 'mouseout', onMouseOut);\n            }\n        };\n    }, [enabled, ref]);\n    return value;\n};\nexport default useHoverDirty;\n"]},"metadata":{},"sourceType":"module"}