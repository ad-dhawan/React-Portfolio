{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Vector = void 0;\n\nclass Vector {\n  constructor(x, y) {\n    let defX, defY;\n\n    if (y === undefined) {\n      if (typeof x === \"number\") {\n        throw new Error(\"tsParticles - Vector not initialized correctly\");\n      }\n\n      const coords = x;\n      [defX, defY] = [coords.x, coords.y];\n    } else {\n      [defX, defY] = [x, y];\n    }\n\n    this.x = defX;\n    this.y = defY;\n  }\n\n  static clone(source) {\n    return Vector.create(source.x, source.y);\n  }\n\n  static create(x, y) {\n    return new Vector(x, y);\n  }\n\n  get angle() {\n    return Math.atan2(this.y, this.x);\n  }\n\n  set angle(angle) {\n    this.updateFromAngle(angle, this.length);\n  }\n\n  get length() {\n    return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n  }\n\n  set length(length) {\n    this.updateFromAngle(this.angle, length);\n  }\n\n  add(v) {\n    return Vector.create(this.x + v.x, this.y + v.y);\n  }\n\n  addTo(v) {\n    this.x += v.x;\n    this.y += v.y;\n  }\n\n  sub(v) {\n    return Vector.create(this.x - v.x, this.y - v.y);\n  }\n\n  subFrom(v) {\n    this.x -= v.x;\n    this.y -= v.y;\n  }\n\n  mult(n) {\n    return Vector.create(this.x * n, this.y * n);\n  }\n\n  multTo(n) {\n    this.x *= n;\n    this.y *= n;\n  }\n\n  div(n) {\n    return Vector.create(this.x / n, this.y / n);\n  }\n\n  divTo(n) {\n    this.x /= n;\n    this.y /= n;\n  }\n\n  distanceTo(v) {\n    return this.sub(v).length;\n  }\n\n  getLengthSq() {\n    return Math.pow(this.x, 2) + Math.pow(this.y, 2);\n  }\n\n  distanceToSq(v) {\n    return this.sub(v).getLengthSq();\n  }\n\n  manhattanDistanceTo(v) {\n    return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n  }\n\n  copy() {\n    return Vector.clone(this);\n  }\n\n  setTo(velocity) {\n    this.x = velocity.x;\n    this.y = velocity.y;\n  }\n\n  rotate(angle) {\n    return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n  }\n\n  updateFromAngle(angle, length) {\n    this.x = Math.cos(angle) * length;\n    this.y = Math.sin(angle) * length;\n  }\n\n}\n\nexports.Vector = Vector;\nVector.origin = Vector.create(0, 0);","map":{"version":3,"sources":["D:/React-Portfolio/node_modules/tsparticles/dist/Core/Particle/Vector.js"],"names":["Object","defineProperty","exports","value","Vector","constructor","x","y","defX","defY","undefined","Error","coords","clone","source","create","angle","Math","atan2","updateFromAngle","length","sqrt","pow","add","v","addTo","sub","subFrom","mult","n","multTo","div","divTo","distanceTo","getLengthSq","distanceToSq","manhattanDistanceTo","abs","copy","setTo","velocity","rotate","cos","sin","origin"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Vector = void 0;\r\nclass Vector {\r\n    constructor(x, y) {\r\n        let defX, defY;\r\n        if (y === undefined) {\r\n            if (typeof x === \"number\") {\r\n                throw new Error(\"tsParticles - Vector not initialized correctly\");\r\n            }\r\n            const coords = x;\r\n            [defX, defY] = [coords.x, coords.y];\r\n        }\r\n        else {\r\n            [defX, defY] = [x, y];\r\n        }\r\n        this.x = defX;\r\n        this.y = defY;\r\n    }\r\n    static clone(source) {\r\n        return Vector.create(source.x, source.y);\r\n    }\r\n    static create(x, y) {\r\n        return new Vector(x, y);\r\n    }\r\n    get angle() {\r\n        return Math.atan2(this.y, this.x);\r\n    }\r\n    set angle(angle) {\r\n        this.updateFromAngle(angle, this.length);\r\n    }\r\n    get length() {\r\n        return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\r\n    }\r\n    set length(length) {\r\n        this.updateFromAngle(this.angle, length);\r\n    }\r\n    add(v) {\r\n        return Vector.create(this.x + v.x, this.y + v.y);\r\n    }\r\n    addTo(v) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n    }\r\n    sub(v) {\r\n        return Vector.create(this.x - v.x, this.y - v.y);\r\n    }\r\n    subFrom(v) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n    }\r\n    mult(n) {\r\n        return Vector.create(this.x * n, this.y * n);\r\n    }\r\n    multTo(n) {\r\n        this.x *= n;\r\n        this.y *= n;\r\n    }\r\n    div(n) {\r\n        return Vector.create(this.x / n, this.y / n);\r\n    }\r\n    divTo(n) {\r\n        this.x /= n;\r\n        this.y /= n;\r\n    }\r\n    distanceTo(v) {\r\n        return this.sub(v).length;\r\n    }\r\n    getLengthSq() {\r\n        return Math.pow(this.x, 2) + Math.pow(this.y, 2);\r\n    }\r\n    distanceToSq(v) {\r\n        return this.sub(v).getLengthSq();\r\n    }\r\n    manhattanDistanceTo(v) {\r\n        return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\r\n    }\r\n    copy() {\r\n        return Vector.clone(this);\r\n    }\r\n    setTo(velocity) {\r\n        this.x = velocity.x;\r\n        this.y = velocity.y;\r\n    }\r\n    rotate(angle) {\r\n        return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\r\n    }\r\n    updateFromAngle(angle, length) {\r\n        this.x = Math.cos(angle) * length;\r\n        this.y = Math.sin(angle) * length;\r\n    }\r\n}\r\nexports.Vector = Vector;\r\nVector.origin = Vector.create(0, 0);\r\n"]},"metadata":{},"sourceType":"script"}